
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ba  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000020e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000020e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000240  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009e5  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000629  00000000  00000000  00000cc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a7  00000000  00000000  000012f2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  0000159c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ea  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000105  00000000  00000000  00001a1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001b23  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 af 00 	call	0x15e	; 0x15e <main>
  64:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <dio_set_port_dir>:
 *  Author: ahmed
 */ 
#include "dio.h"
void dio_set_port_dir(port_base port,dir mode)
{
	if (mode==OUTPUT)
  6c:	61 30       	cpi	r22, 0x01	; 1
  6e:	31 f4       	brne	.+12     	; 0x7c <dio_set_port_dir+0x10>
	{
		(*(volatile port_base*)(port-1))=0xFF;
  70:	e8 2f       	mov	r30, r24
  72:	f0 e0       	ldi	r31, 0x00	; 0
  74:	31 97       	sbiw	r30, 0x01	; 1
  76:	8f ef       	ldi	r24, 0xFF	; 255
  78:	80 83       	st	Z, r24
  7a:	08 95       	ret
	}
	else if(mode == INPUT)
  7c:	61 11       	cpse	r22, r1
  7e:	05 c0       	rjmp	.+10     	; 0x8a <dio_set_port_dir+0x1e>
	{
		(*(volatile port_base*)(port-1))=0x00;
  80:	e8 2f       	mov	r30, r24
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	31 97       	sbiw	r30, 0x01	; 1
  86:	10 82       	st	Z, r1
  88:	08 95       	ret
	}
	else
	{
	 (*(volatile port_base*)(port-1))=mode;	
  8a:	e8 2f       	mov	r30, r24
  8c:	f0 e0       	ldi	r31, 0x00	; 0
  8e:	31 97       	sbiw	r30, 0x01	; 1
  90:	60 83       	st	Z, r22
  92:	08 95       	ret

00000094 <dio_set_pin_dir>:
	}
}
void dio_set_pin_dir(port_base port,u8 pin,dir mode)
{
	if (mode==OUTPUT)
  94:	41 30       	cpi	r20, 0x01	; 1
  96:	69 f4       	brne	.+26     	; 0xb2 <dio_set_pin_dir+0x1e>
	{
		(*(volatile port_base*)(port-1))|=(1<<pin);
  98:	e8 2f       	mov	r30, r24
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	22 91       	ld	r18, -Z
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <dio_set_pin_dir+0x14>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	6a 95       	dec	r22
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <dio_set_pin_dir+0x10>
  ac:	82 2b       	or	r24, r18
  ae:	80 83       	st	Z, r24
  b0:	08 95       	ret
	}
	else
	{
		(*(volatile port_base*)(port-1))&=~(1<<pin);
  b2:	e8 2f       	mov	r30, r24
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	22 91       	ld	r18, -Z
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <dio_set_pin_dir+0x2e>
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	6a 95       	dec	r22
  c4:	e2 f7       	brpl	.-8      	; 0xbe <dio_set_pin_dir+0x2a>
  c6:	80 95       	com	r24
  c8:	82 23       	and	r24, r18
  ca:	80 83       	st	Z, r24
  cc:	08 95       	ret

000000ce <dio_write_port>:
	}
}
void dio_write_port(port_base port,state mode)
{
	if (mode==HIGH)
  ce:	61 30       	cpi	r22, 0x01	; 1
  d0:	29 f4       	brne	.+10     	; 0xdc <dio_write_port+0xe>
	{
		(*(volatile port_base*)(port))=0xFF;
  d2:	e8 2f       	mov	r30, r24
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	8f ef       	ldi	r24, 0xFF	; 255
  d8:	80 83       	st	Z, r24
  da:	08 95       	ret
	}
	else if(mode == LOW)
  dc:	61 11       	cpse	r22, r1
  de:	04 c0       	rjmp	.+8      	; 0xe8 <dio_write_port+0x1a>
	{
		(*(volatile port_base*)(port))=0x00;
  e0:	e8 2f       	mov	r30, r24
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	10 82       	st	Z, r1
  e6:	08 95       	ret
	}
	else
	{
		(*(volatile port_base*)(port))=mode;
  e8:	e8 2f       	mov	r30, r24
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	60 83       	st	Z, r22
  ee:	08 95       	ret

000000f0 <dio_write_pin>:
	}
}
void dio_write_pin(port_base port,u8 pin,state mode)
{
	if (mode==HIGH)
  f0:	41 30       	cpi	r20, 0x01	; 1
  f2:	69 f4       	brne	.+26     	; 0x10e <dio_write_pin+0x1e>
	{
		(*(volatile port_base*)(port))|=(1<<pin);
  f4:	e8 2f       	mov	r30, r24
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	20 81       	ld	r18, Z
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	02 c0       	rjmp	.+4      	; 0x104 <dio_write_pin+0x14>
 100:	88 0f       	add	r24, r24
 102:	99 1f       	adc	r25, r25
 104:	6a 95       	dec	r22
 106:	e2 f7       	brpl	.-8      	; 0x100 <dio_write_pin+0x10>
 108:	82 2b       	or	r24, r18
 10a:	80 83       	st	Z, r24
 10c:	08 95       	ret
	}
	else
	{
		(*(volatile port_base*)(port))&=~(1<<pin);
 10e:	e8 2f       	mov	r30, r24
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	20 81       	ld	r18, Z
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <dio_write_pin+0x2e>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <dio_write_pin+0x2a>
 122:	80 95       	com	r24
 124:	82 23       	and	r24, r18
 126:	80 83       	st	Z, r24
 128:	08 95       	ret

0000012a <dio_read_port>:
	}
}
u8 dio_read_port(port_base port)
{
	return(*(volatile port_base*)(port-2));
 12a:	e8 2f       	mov	r30, r24
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	32 97       	sbiw	r30, 0x02	; 2
 130:	80 81       	ld	r24, Z
}
 132:	08 95       	ret

00000134 <dio_read_pin>:
u8 dio_read_pin(port_base port,u8 pin)
{
	return ((*(volatile port_base*)(port-2))&(1<<pin))>>pin;	
 134:	e8 2f       	mov	r30, r24
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	32 97       	sbiw	r30, 0x02	; 2
 13a:	20 81       	ld	r18, Z
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	06 2e       	mov	r0, r22
 142:	02 c0       	rjmp	.+4      	; 0x148 <dio_read_pin+0x14>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	0a 94       	dec	r0
 14a:	e2 f7       	brpl	.-8      	; 0x144 <dio_read_pin+0x10>
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	82 23       	and	r24, r18
 150:	93 23       	and	r25, r19
 152:	02 c0       	rjmp	.+4      	; 0x158 <dio_read_pin+0x24>
 154:	95 95       	asr	r25
 156:	87 95       	ror	r24
 158:	6a 95       	dec	r22
 15a:	e2 f7       	brpl	.-8      	; 0x154 <dio_read_pin+0x20>
 15c:	08 95       	ret

0000015e <main>:


#include "dio.h"
int main(void)
{
   dio_set_port_dir(porta,OUTPUT);
 15e:	61 e0       	ldi	r22, 0x01	; 1
 160:	8b e3       	ldi	r24, 0x3B	; 59
 162:	0e 94 36 00 	call	0x6c	; 0x6c <dio_set_port_dir>
   dio_set_port_dir(portb,INPUT);
 166:	60 e0       	ldi	r22, 0x00	; 0
 168:	88 e3       	ldi	r24, 0x38	; 56
 16a:	0e 94 36 00 	call	0x6c	; 0x6c <dio_set_port_dir>
   dio_set_pin_dir(portc,3,OUTPUT);
 16e:	41 e0       	ldi	r20, 0x01	; 1
 170:	63 e0       	ldi	r22, 0x03	; 3
 172:	85 e3       	ldi	r24, 0x35	; 53
 174:	0e 94 4a 00 	call	0x94	; 0x94 <dio_set_pin_dir>
   dio_set_pin_dir(portc,4,INPUT);
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	64 e0       	ldi	r22, 0x04	; 4
 17c:	85 e3       	ldi	r24, 0x35	; 53
 17e:	0e 94 4a 00 	call	0x94	; 0x94 <dio_set_pin_dir>
   dio_write_port(porta,HIGH);
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	8b e3       	ldi	r24, 0x3B	; 59
 186:	0e 94 67 00 	call	0xce	; 0xce <dio_write_port>
   dio_write_port(porta,LOW);
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	8b e3       	ldi	r24, 0x3B	; 59
 18e:	0e 94 67 00 	call	0xce	; 0xce <dio_write_port>
   dio_write_pin(portc,3,HIGH);
 192:	41 e0       	ldi	r20, 0x01	; 1
 194:	63 e0       	ldi	r22, 0x03	; 3
 196:	85 e3       	ldi	r24, 0x35	; 53
 198:	0e 94 78 00 	call	0xf0	; 0xf0 <dio_write_pin>
   dio_write_pin(portc,3,LOW);
 19c:	40 e0       	ldi	r20, 0x00	; 0
 19e:	63 e0       	ldi	r22, 0x03	; 3
 1a0:	85 e3       	ldi	r24, 0x35	; 53
 1a2:	0e 94 78 00 	call	0xf0	; 0xf0 <dio_write_pin>
   dio_read_port(portb);
 1a6:	88 e3       	ldi	r24, 0x38	; 56
 1a8:	0e 94 95 00 	call	0x12a	; 0x12a <dio_read_port>
   dio_read_pin(portc,4);
 1ac:	64 e0       	ldi	r22, 0x04	; 4
 1ae:	85 e3       	ldi	r24, 0x35	; 53
 1b0:	0e 94 9a 00 	call	0x134	; 0x134 <dio_read_pin>
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <main+0x56>

000001b6 <_exit>:
 1b6:	f8 94       	cli

000001b8 <__stop_program>:
 1b8:	ff cf       	rjmp	.-2      	; 0x1b8 <__stop_program>
